<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	http://www.springframework.org/schema/cache 
     http://www.springframework.org/schema/cache/spring-cache.xsd
     http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring
     http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.1.xsd">

    <!--导入jdbc.properties文件 -->
    <context:property-placeholder location="/WEB-INF/jdbc-mysql.properties"
                                  ignore-unresolvable="true"/>


    <!--配置mysql数据源 -->
    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName">
            <value>${jdbc.driverClassName}</value>
            <!--com.mysql.jdbc.Driver -->
        </property>
        <property name="url">
            <value>${jdbc.url}
            </value>
        </property>
        <property name="username">
            <value>${jdbc.username}</value>
        </property>
        <property name="password">
            <value>${jdbc.password}</value>
        </property>
    </bean>


    <!-- myBatis文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>


        <!-- 加载mybatis-config配置文件，里面设置别名 -->
        <!-- <property name="configLocation" value="/WEB-INF/mybatis-config.xml"/>-->


        <!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置,并且可以扫描实体中的别名注解 -->
        <property name="typeAliasesPackage" value="com.romantic.factor.entity"/>

        <!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
        <property name="mapperLocations" value="classpath:com/romantic/factor/dao/*.xml"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.romantic.factor.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>

    </bean>
    <!-- 配置事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    
    <bean autowire="byName" id="loginFilterDelegate"
		class="com.romantic.factor.filter.LoginFilter" />
		
	<bean autowire="byName" id="pathFilterDelegate"
		class="com.romantic.factor.filter.UrlPathFilter" />

    <!-- 注解方式配置事物 -->
    <!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->

    <!-- 拦截器方式配置事物 -->
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="append*" propagation="REQUIRED"/>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="modify*" propagation="REQUIRED"/>
            <tx:method name="edit*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="remove*" propagation="REQUIRED"/>
            <tx:method name="repair" propagation="REQUIRED"/>
            <tx:method name="delAndRepair" propagation="REQUIRED"/>

            <tx:method name="get*" propagation="SUPPORTS"/>
            <tx:method name="find*" propagation="SUPPORTS"/>
            <tx:method name="load*" propagation="SUPPORTS"/>
            <tx:method name="search*" propagation="SUPPORTS"/>
            <tx:method name="datagrid*" propagation="SUPPORTS"/>

            <tx:method name="*" propagation="SUPPORTS"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="transactionPointcut" expression="execution(* com.romantic.factor.service.*.*(..))"/>
        <aop:advisor pointcut-ref="transactionPointcut"
                     advice-ref="transactionAdvice"/>
    </aop:config>
    
    
    <cache:annotation-driven mode="proxy" />
	
	
	 <bean id="weddingParamService" class="com.romantic.factor.service.WeddingParamService"/>  
	 <bean id="userService" class="com.romantic.factor.service.UserService"/>  
	 <bean id="photoerService" class="com.romantic.factor.service.PhotoerService"/>
	 <bean id="dressService" class="com.romantic.factor.service.DressService"/> 
	 <bean id="makeupMakeerService" class="com.romantic.factor.service.MakeupMakeerService"/> 
	 <bean id="makeupWorksService" class="com.romantic.factor.service.MakeupWorksService"/>
	 <bean id="photoerWorksService" class="com.romantic.factor.service.PhotoerWorksService"/> 
	
	<bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
		<property name="caches">
			<set>
				<bean p:name="default" class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" />
				<bean p:name="countPhotoer" class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" />
          		<bean p:name="photoer_id" class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"/>
          		<bean p:name="photoer" class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"/>
          		<bean p:name="selectDress" class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"/>
          		<bean p:name="countDress" class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"/>
          		<bean p:name="selectMakeupMakeer" class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"/>
          		<bean p:name="selectMakeupMakeerByid" class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"/>
          		<bean p:name="countMakeupMakeer" class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"/>
          		<bean p:name="selectMakeupWorks" class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"/>
          		<bean p:name="countMakeupWorks" class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"/>
          		<bean p:name="aboutPhotoerWorks" class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"/>
          		<bean p:name="selectPhotoerWorks" class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"/>
          		<bean p:name="countPhotoerWorks" class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"/>
          		<bean p:name="aboutPhotoerWorks" class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"/>
          		
			</set>
		</property>
	</bean>
</beans>
