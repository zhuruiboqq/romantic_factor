<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的 例如namespace="me.gacl.mapping.userMapper"就是me.gacl.mapping(包名)+userMapper(userMapper.xml文件去除后缀) -->
<mapper namespace="com.romantic.factor.dao.AttachmentImageDao">
	<!-- 在select标签中编写查询的SQL语句， 设置select标签的id属性为getUser，id属性值必须是唯一的，不能够重复 使用parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型 resultType="me.gacl.domain.User"就表示将查询结果封装成一个User类的对象返回 
		User类就是users表所对应的实体类 -->
	<resultMap type="AttachmentImageInfo" id="AttachmentImageInfoAllResult">
		<id property="id" column="id" />
		<result property="name" column="name" />
		<result property="number" column="number" />
		<result property="simpleName" column="simpleName" />
		<result property="createTime" column="createTime" />
		<result property="creator" column="creatorID" />
		<result property="lastUpdateTime" column="lastUpdateTime" />
		<result property="lastUpdator" column="lastUpdatorID" />
		<result property="storePath" column="storePath" />
		<result property="displayURL" column="displayURL" />
		<result property="permission" column="permission" />
		<result property="sizeInByte" column="sizeInByte" />
		<result property="size" column="size" />
		<result property="extName" column="extName" />
		<result property="width" column="width" />
		<result property="height" column="height" />
	</resultMap>


	<select id="selectByArtist" parameterType="long" resultMap="AttachmentImageInfoAllResult">
		select att.*
		from t_bas_AttachmentImage att
		left join t_bd_ArtistWorks artistWork on artistWork.artistID=#{artistID} and att.id=artistWork.workID
		order by
		artistWork.seq desc
		limit #{startIndex},#{perPageSize};
	</select>

	<select id="countByArtist" parameterType="long" resultType="int">
		select count(1)
		from t_bas_AttachmentImage att
		left join t_bd_ArtistWorks artistWork on artistWork.artistID=#{artistID} and att.id=artistWork.workID
	</select>


	<select id="selectAllByArtist" parameterType="long" resultMap="AttachmentImageInfoAllResult">
		select att.*
		from t_bas_AttachmentImage att
		left join t_bd_ArtistWorks artistWork on artistWork.artistID=#{artistID} and att.id=artistWork.workID
		order by
		artistWork.seq desc
	</select>

	<!-- 根据id查询得到一个user对象 -->
	<select id="selectByID" parameterType="long" resultMap="AttachmentImageInfoAllResult">
		select att.*
		from t_bas_AttachmentImage att
		where id=#{id}
	</select>

	<!-- 创建用户(Create) -->
	<insert id="add" parameterType="AttachmentImageInfo">
		insert into
		t_bas_AttachmentImage(name,number,simpleName,creatorID,lastUpdateTime,lastUpdatorID,storePath,displayURL,permission,sizeInByte,size,extName,width,height)
		values(#{name},#{number},#{simpleName},#{creator},#{lastUpdateTime},#{lastUpdator},#{storePath},#{displayURL},#{permission},#{sizeInByte},#{size},#{extName},#{width},#{height})
	</insert>

	<!-- 删除用户(Remove) -->
	<delete id="deleteByID" parameterType="long">
		delete from t_bas_AttachmentImage where id=#{id}
	</delete>

	<!-- 修改用户(Update) -->
	<update id="update" parameterType="AttachmentImageInfo">
		update t_bas_AttachmentImage set name=#{name},simpleName=#{simpleName} where id=#{id}
	</update>

	<!-- 查询全部用户 -->
	<select id="selectAll" resultMap="AttachmentImageInfoAllResult">
		select * from t_bas_AttachmentImage
	</select>
</mapper>